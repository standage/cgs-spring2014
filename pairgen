#!/usr/bin/env python
# pairselect: randomly assign students to pairs
import getopt
import random
import sys

def print_usage(outstream):
  usage = ("Usage: ./pairselect [options] students.txt\n"
           "  Options:\n"
           "    -h|--help         print this help message and exit\n"
           "    -o|--out: FILE    file to which output will be written;\n"
           "                      default is terminal (standard output)\n")
  print >> outstream, usage

# Parse options and arguments
outstream = sys.stdout
optstr = "ho:"
longopts = ["help", "out="]
(options, args) = getopt.getopt(sys.argv[1:], optstr, longopts)
for key, value in options:
  if key in ("-h", "-help", "--help"):
    print_usage(sys.stdout)
    sys.exit(0)
  elif key in ("-o", "-out", "--out"):
    outfile = value
    try:
      outstream = open(outfile, "w")
    except IOError as e:
      print >> sys.stderr, "error opening output file %s" % options.outfile
      print >> sys.stderr, e
      sys.exit(1)
  else:
    assert False, "unsupported option '%s'" % key

infile = None
instream = None
if len(args) > 0:
  infile = args[0]
  try:
    instream = open(infile, "r")
  except IOError as e:
    print >> sys.stderr, "error opening input file %s" % infile
    print >> sys.stderr, e
    sys.exit(1)
elif not sys.stdin.isatty():
  instream = sys.stdin
else:
  print >> sys.stderr, "error: please provide input with file or standard input"
  print_usage(sys.stderr)
  sys.exit(1)

students = []
for line in instream:
  line = line.rstrip()
  fields = line.split("\t")
  students.append(fields[2])
instream.close()

random.shuffle(students)
while(len(students) > 0):
  s1 = students.pop()
  s2 = students.pop()
  if s2:
    print >> outstream, "[%s, %s]" % (s1, s2)
  else:
    print >> outstream, "[%s]" % (s1)
outstream.close()
